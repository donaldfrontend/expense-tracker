{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b024a97.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n            \r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n\r\n     case 'DELETE_TRANSACTION':\r\n        return { \r\n          ...state,\r\n          transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n        }\r\n\r\n      case 'ADD_TRANSACTION':\r\n        return {\r\n          ...state,\r\n          transactions: [action.payload, ...state.transactions]\r\n        }\r\n        \r\n      default:\r\n        return state;\r\n    }\r\n  }","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  transactions: []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  \r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n// will take the whole transaction and not only its ID\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n  }\r\n\r\n return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>); \r\n}","import React , { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0);\r\n  \r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>${total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  \r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  );\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"inc-exp-container\">\r\n      \r\n        <div>\r\n          <h4>Income</h4>\r\n          <p id=\"money-plus\" className=\"money plus\">{income}</p>\r\n        </div>\r\n\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p id=\"money-minus\" className=\"money minus\">{expense}</p>\r\n        </div>\r\n        \r\n      </div> \r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    \r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    //trnsaction value will have - sign if less than 0, and + if bigger\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n\r\n\r\n    return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'} >\r\n        {transaction.text} \r\n        <span> {sign}${Math.abs(transaction.amount)} </span>\r\n        <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\r\n    </li>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Transaction } from './Transaction';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>History</h3>\r\n        <ul className=\"list\">\r\n           {transactions.map(transaction => \r\n           (<Transaction key={transaction.id} transaction={transaction} />))}\r\n        </ul>\r\n      </>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction(newTransaction);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Header }  from './components/Header';\nimport { Balance }  from './components/Balance';\nimport { IncomeExpenses }  from './components/IncomeExpenses';\nimport { TransactionList }  from './components/TransactionList';\nimport { AddTransaction}  from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n       <Header />\n       <div className=\"container\">\n         <Balance />\n         <IncomeExpenses />\n         <TransactionList />\n         <AddTransaction />\n       </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}